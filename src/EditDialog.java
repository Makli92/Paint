/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paintingEs;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/*
 * @author Makli
 */

public final class EditDialog extends java.awt.Dialog {
    ArrayList<Integer> HelpingList = new ArrayList<>();
    Color shapeToolColor, shapeFillColor;
    boolean changedToolColor, changedFillColor = false;
    int strokeSize;
    
    /*
     * Creates new form EditDialog
     */
    
    public EditDialog(java.awt.Frame parent, boolean modal, ArrayList<Integer> DetailsList) {
        super(parent, modal);
        HelpingList = DetailsList;
        initComponents();
        initComponentsVol2();
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditDialogPnl = new javax.swing.JPanel();
        SaveBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        StartingPointLbl = new javax.swing.JLabel();
        EndingPointLbl = new javax.swing.JLabel();
        MiddlePointsLbl = new javax.swing.JLabel();
        CenterPointLbl = new javax.swing.JLabel();
        SideRadiusLbl = new javax.swing.JLabel();
        SPXLbl = new javax.swing.JLabel();
        CPXLbl = new javax.swing.JLabel();
        MPXLbl = new javax.swing.JLabel();
        EPXLbl = new javax.swing.JLabel();
        SPYLbl = new javax.swing.JLabel();
        CPYLbl = new javax.swing.JLabel();
        MPYLbl = new javax.swing.JLabel();
        EPYLbl = new javax.swing.JLabel();
        SPXTxtFld = new javax.swing.JTextField();
        SPYTxtFld = new javax.swing.JTextField();
        CPYTxtFld = new javax.swing.JTextField();
        CPXTxtFld = new javax.swing.JTextField();
        MPXTxtFld = new javax.swing.JTextField();
        MPYTxtFld = new javax.swing.JTextField();
        EPXTxtFld = new javax.swing.JTextField();
        EPYTxtFld = new javax.swing.JTextField();
        ToolColorLbl = new javax.swing.JLabel();
        SideRadiusTxtFld = new javax.swing.JTextField();
        MPXLbl1 = new javax.swing.JLabel();
        MPXTxtFld1 = new javax.swing.JTextField();
        MPYLbl1 = new javax.swing.JLabel();
        MPYTxtFld1 = new javax.swing.JTextField();
        MPXLbl2 = new javax.swing.JLabel();
        MPXTxtFld2 = new javax.swing.JTextField();
        MPYLbl2 = new javax.swing.JLabel();
        MPYTxtFld2 = new javax.swing.JTextField();
        ChangeToolColorBtn = new javax.swing.JButton();
        FillColorLbl = new javax.swing.JLabel();
        ChangeFillColorBtn = new javax.swing.JButton();
        StrokeSizeSldr = new javax.swing.JSlider();
        StrokeLbl = new javax.swing.JLabel();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        EditDialogPnl.setBackground(new java.awt.Color(204, 204, 255));

        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        StartingPointLbl.setText("Starting Point :");

        EndingPointLbl.setText("Ending Point :");

        MiddlePointsLbl.setText("Middle Point(s) :");

        CenterPointLbl.setText("Center Point :");

        SideRadiusLbl.setText("Side/Radius :");

        SPXLbl.setText("X :");

        CPXLbl.setText("X :");

        MPXLbl.setText("X :");

        EPXLbl.setText("X :");

        SPYLbl.setText("Y :");

        CPYLbl.setText("Y :");

        MPYLbl.setText("Y :");

        EPYLbl.setText("Y :");

        SPXTxtFld.setMinimumSize(new java.awt.Dimension(30, 20));
        SPXTxtFld.setPreferredSize(new java.awt.Dimension(30, 20));
        SPXTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SPXTxtFldKeyTyped(evt);
            }
        });

        SPYTxtFld.setMinimumSize(new java.awt.Dimension(30, 20));
        SPYTxtFld.setPreferredSize(new java.awt.Dimension(30, 20));
        SPYTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SPYTxtFldKeyTyped(evt);
            }
        });

        CPYTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CPYTxtFldKeyTyped(evt);
            }
        });

        CPXTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CPXTxtFldKeyTyped(evt);
            }
        });

        MPXTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPXTxtFldKeyTyped(evt);
            }
        });

        MPYTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPYTxtFldKeyTyped(evt);
            }
        });

        EPXTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EPXTxtFldKeyTyped(evt);
            }
        });

        EPYTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EPYTxtFldKeyTyped(evt);
            }
        });

        ToolColorLbl.setText("Tool Color :");

        SideRadiusTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SideRadiusTxtFldKeyTyped(evt);
            }
        });

        MPXLbl1.setText("X :");

        MPXTxtFld1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPXTxtFld1KeyTyped(evt);
            }
        });

        MPYLbl1.setText("Y :");

        MPYTxtFld1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPYTxtFld1KeyTyped(evt);
            }
        });

        MPXLbl2.setText("X :");

        MPXTxtFld2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPXTxtFld2KeyTyped(evt);
            }
        });

        MPYLbl2.setText("Y :");

        MPYTxtFld2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MPYTxtFld2KeyTyped(evt);
            }
        });

        ChangeToolColorBtn.setText("Change Tool Color");
        ChangeToolColorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeToolColorBtnActionPerformed(evt);
            }
        });

        FillColorLbl.setText("Fill Color :");

        ChangeFillColorBtn.setText("Change Fill Color");
        ChangeFillColorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeFillColorBtnActionPerformed(evt);
            }
        });

        StrokeSizeSldr.setMaximum(3);
        StrokeSizeSldr.setMinimum(1);
        StrokeSizeSldr.setValue(0);
        StrokeSizeSldr.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                StrokeSizeSldrStateChanged(evt);
            }
        });

        StrokeLbl.setText("Stroke size : ");

        javax.swing.GroupLayout EditDialogPnlLayout = new javax.swing.GroupLayout(EditDialogPnl);
        EditDialogPnl.setLayout(EditDialogPnlLayout);
        EditDialogPnlLayout.setHorizontalGroup(
            EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StrokeLbl)
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(SideRadiusLbl)
                                .addComponent(ToolColorLbl))
                            .addComponent(MiddlePointsLbl)
                            .addComponent(CenterPointLbl)
                            .addComponent(StartingPointLbl)
                            .addComponent(EndingPointLbl))
                        .addGap(27, 27, 27)
                        .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(SideRadiusTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addComponent(EPXLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(EPYLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addComponent(CPXLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CPXTxtFld)
                                .addGap(36, 36, 36)
                                .addComponent(CPYLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addComponent(SPXLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(SPYLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addComponent(MPXLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(MPYLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPYTxtFld)
                                .addGap(48, 48, 48)
                                .addComponent(MPXLbl1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPXTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(MPYLbl1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPYTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(MPXLbl2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPXTxtFld2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(MPYLbl2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MPYTxtFld2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addComponent(StrokeSizeSldr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(227, 227, 227)
                        .addComponent(SaveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBtn))
                    .addComponent(FillColorLbl)
                    .addComponent(ChangeFillColorBtn)
                    .addComponent(ChangeToolColorBtn))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CancelBtn, SaveBtn});

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CPXTxtFld, CPYTxtFld, EPXTxtFld, EPYTxtFld, MPXTxtFld, MPXTxtFld1, MPXTxtFld2, MPYTxtFld, MPYTxtFld1, MPYTxtFld2, SPXTxtFld, SPYTxtFld, SideRadiusTxtFld});

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CenterPointLbl, EndingPointLbl, FillColorLbl, MiddlePointsLbl, SideRadiusLbl, StartingPointLbl, StrokeLbl, ToolColorLbl});

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ChangeFillColorBtn, ChangeToolColorBtn});

        EditDialogPnlLayout.setVerticalGroup(
            EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addComponent(StartingPointLbl)
                        .addGap(38, 38, 38)
                        .addComponent(CenterPointLbl)
                        .addGap(36, 36, 36)
                        .addComponent(MiddlePointsLbl)
                        .addGap(34, 34, 34)
                        .addComponent(EndingPointLbl)
                        .addGap(48, 48, 48)
                        .addComponent(SideRadiusLbl))
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SPXLbl)
                                    .addComponent(SPYLbl)
                                    .addComponent(SPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CPXLbl)
                                    .addComponent(CPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CPYLbl)
                                    .addComponent(CPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47))
                            .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MPXLbl)
                                    .addComponent(MPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(EditDialogPnlLayout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(MPYLbl1)
                                        .addComponent(MPYTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MPXLbl2)
                                        .addComponent(MPXTxtFld2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MPYLbl2)
                                        .addComponent(MPYTxtFld2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MPYLbl)
                                    .addComponent(MPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MPXLbl1)
                                    .addComponent(MPXTxtFld1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31)
                        .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EPXLbl)
                            .addComponent(EPXTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EPYLbl)
                            .addComponent(EPYTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(SideRadiusTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addComponent(ToolColorLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChangeToolColorBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FillColorLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(EditDialogPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveBtn)
                            .addComponent(CancelBtn)))
                    .addGroup(EditDialogPnlLayout.createSequentialGroup()
                        .addComponent(ChangeFillColorBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(StrokeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StrokeSizeSldr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CPXTxtFld, CPYTxtFld, EPXTxtFld, EPYTxtFld, MPXTxtFld, MPYTxtFld, SPXTxtFld, SPYTxtFld, SideRadiusTxtFld});

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CenterPointLbl, EndingPointLbl, FillColorLbl, MiddlePointsLbl, SideRadiusLbl, StartingPointLbl, ToolColorLbl});

        EditDialogPnlLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ChangeFillColorBtn, ChangeToolColorBtn});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EditDialogPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EditDialogPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void initComponentsVol2() {
        setLocationRelativeTo(null);
        switch(HelpingList.get(0)) {
            case 1:
                setTitle("Line");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                EPXTxtFld.setText(HelpingList.get(3).toString());
                EPYTxtFld.setText(HelpingList.get(4).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(5) + ") G(" + HelpingList.get(6) + ") B(" + HelpingList.get(7) + ")");
                StrokeSizeSldr.setValue(HelpingList.get(8));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                MiddlePointsLbl.setVisible(false);
                MPXLbl.setVisible(false);
                MPYLbl.setVisible(false);
                MPXTxtFld.setVisible(false);
                MPYTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                FillColorLbl.setVisible(false);
                ChangeFillColorBtn.setVisible(false);
                break;
            case 2:
                setTitle("Circle");
                CenterPointLbl.setVisible(true);
                CPXLbl.setVisible(true);
                CPYLbl.setVisible(true);
                CPYTxtFld.setVisible(true);
                CPXTxtFld.setVisible(true);
                SideRadiusLbl.setVisible(true);
                SideRadiusTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                CPXTxtFld.setText(HelpingList.get(1).toString());
                CPYTxtFld.setText(HelpingList.get(2).toString());
                SideRadiusLbl.setText("Radius :");
                SideRadiusTxtFld.setText(HelpingList.get(3).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(4) + ") G(" + HelpingList.get(5) + ") B(" + HelpingList.get(6) + ")");
                if (HelpingList.get(8) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(9) + ") G(" + HelpingList.get(10) + ") B(" + HelpingList.get(11) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(7));
                
                StartingPointLbl.setVisible(false);
                SPXLbl.setVisible(false);
                SPYLbl.setVisible(false);
                SPXTxtFld.setVisible(false);
                SPYTxtFld.setVisible(false);
                EndingPointLbl.setVisible(false);
                EPXLbl.setVisible(false);
                EPYLbl.setVisible(false);
                EPXTxtFld.setVisible(false);
                EPYTxtFld.setVisible(false);
                MiddlePointsLbl.setVisible(false);
                MPXLbl.setVisible(false);
                MPYLbl.setVisible(false);
                MPXTxtFld.setVisible(false);
                MPYTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                break;
            case 3:
                setTitle("Triangle");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                MiddlePointsLbl.setVisible(true);
                MPXLbl.setVisible(true);
                MPYLbl.setVisible(true);
                MPXTxtFld.setVisible(true);
                MPYTxtFld.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                MPXTxtFld.setText(HelpingList.get(3).toString());
                MPYTxtFld.setText(HelpingList.get(4).toString());
                EPXTxtFld.setText(HelpingList.get(5).toString());
                EPYTxtFld.setText(HelpingList.get(6).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(7) + ") G(" + HelpingList.get(8) + ") B(" + HelpingList.get(9) + ")");
                if (HelpingList.get(11) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(12) + ") G(" + HelpingList.get(13) + ") B(" + HelpingList.get(14) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(10));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                break;
            case 4:
                setTitle("Square");
                CenterPointLbl.setVisible(true);
                CPXLbl.setVisible(true);
                CPYLbl.setVisible(true);
                CPYTxtFld.setVisible(true);
                CPXTxtFld.setVisible(true);
                SideRadiusLbl.setVisible(true);
                SideRadiusTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                CPXTxtFld.setText(HelpingList.get(1).toString());
                CPYTxtFld.setText(HelpingList.get(2).toString());
                SideRadiusLbl.setText("Side :");
                SideRadiusTxtFld.setText(HelpingList.get(3).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(4) + ") G(" + HelpingList.get(5) + ") B(" + HelpingList.get(6) + ")");
                if (HelpingList.get(8) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(9) + ") G(" + HelpingList.get(10) + ") B(" + HelpingList.get(11) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(7));
                
                StartingPointLbl.setVisible(false);
                SPXLbl.setVisible(false);
                SPYLbl.setVisible(false);
                SPXTxtFld.setVisible(false);
                SPYTxtFld.setVisible(false);
                EndingPointLbl.setVisible(false);
                EPXLbl.setVisible(false);
                EPYLbl.setVisible(false);
                EPXTxtFld.setVisible(false);
                EPYTxtFld.setVisible(false);
                MiddlePointsLbl.setVisible(false);
                MPXLbl.setVisible(false);
                MPYLbl.setVisible(false);
                MPXTxtFld.setVisible(false);
                MPYTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                break;
            case 5:
                setTitle("Polygon(4 sides)");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                MiddlePointsLbl.setVisible(true);
                MPXLbl.setVisible(true);
                MPYLbl.setVisible(true);
                MPXTxtFld.setVisible(true);
                MPYTxtFld.setVisible(true);
                MPXLbl1.setVisible(true);
                MPYLbl1.setVisible(true);
                MPXTxtFld1.setVisible(true);
                MPYTxtFld1.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                MPXTxtFld.setText(HelpingList.get(3).toString());
                MPYTxtFld.setText(HelpingList.get(4).toString());
                MPXTxtFld1.setText(HelpingList.get(5).toString());
                MPYTxtFld1.setText(HelpingList.get(6).toString());
                EPXTxtFld.setText(HelpingList.get(7).toString());
                EPYTxtFld.setText(HelpingList.get(8).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(9) + ") G(" + HelpingList.get(10) + ") B(" + HelpingList.get(11) + ")");
                if (HelpingList.get(13) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(14) + ") G(" + HelpingList.get(15) + ") B(" + HelpingList.get(16) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(12));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                break;
            case 6:
                setTitle("Polygon(5 sides)");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                MiddlePointsLbl.setVisible(true);
                MPXLbl.setVisible(true);
                MPYLbl.setVisible(true);
                MPXTxtFld.setVisible(true);
                MPYTxtFld.setVisible(true);
                MPXLbl1.setVisible(true);
                MPYLbl1.setVisible(true);
                MPXTxtFld1.setVisible(true);
                MPYTxtFld1.setVisible(true);
                MPXLbl2.setVisible(true);
                MPYLbl2.setVisible(true);
                MPXTxtFld2.setVisible(true);
                MPYTxtFld2.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                MPXTxtFld.setText(HelpingList.get(3).toString());
                MPYTxtFld.setText(HelpingList.get(4).toString());
                MPXTxtFld1.setText(HelpingList.get(5).toString());
                MPYTxtFld1.setText(HelpingList.get(6).toString());
                MPXTxtFld2.setText(HelpingList.get(7).toString());
                MPYTxtFld2.setText(HelpingList.get(8).toString());
                EPXTxtFld.setText(HelpingList.get(9).toString());
                EPYTxtFld.setText(HelpingList.get(10).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(11) + ") G(" + HelpingList.get(12) + ") B(" + HelpingList.get(13) + ")");
                if (HelpingList.get(15) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(16) + ") G(" + HelpingList.get(17) + ") B(" + HelpingList.get(18) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(14));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                break;
            case 7:
                setTitle("Crooked Line");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                MiddlePointsLbl.setVisible(true);
                MPXLbl.setVisible(true);
                MPYLbl.setVisible(true);
                MPXTxtFld.setVisible(true);
                MPYTxtFld.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                MPXTxtFld.setText(HelpingList.get(3).toString());
                MPYTxtFld.setText(HelpingList.get(4).toString());
                EPXTxtFld.setText(HelpingList.get(5).toString());
                EPYTxtFld.setText(HelpingList.get(6).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(7) + ") G(" + HelpingList.get(8) + ") B(" + HelpingList.get(9) + ")");
                StrokeSizeSldr.setValue(HelpingList.get(10));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                FillColorLbl.setVisible(false);
                ChangeFillColorBtn.setVisible(false);
                break;
            case 8:
                setTitle("Rectangular");
                StartingPointLbl.setVisible(true);
                SPXLbl.setVisible(true);
                SPYLbl.setVisible(true);
                SPXTxtFld.setVisible(true);
                SPYTxtFld.setVisible(true);
                EndingPointLbl.setVisible(true);
                EPXLbl.setVisible(true);
                EPYLbl.setVisible(true);
                EPXTxtFld.setVisible(true);
                EPYTxtFld.setVisible(true);
                ToolColorLbl.setVisible(true);
                ChangeToolColorBtn.setVisible(true);
                FillColorLbl.setVisible(true);
                ChangeFillColorBtn.setVisible(true);
                StrokeLbl.setVisible(true);
                StrokeSizeSldr.setVisible(true);
                
                SPXTxtFld.setText(HelpingList.get(1).toString());
                SPYTxtFld.setText(HelpingList.get(2).toString());
                EPXTxtFld.setText(HelpingList.get(3).toString());
                EPYTxtFld.setText(HelpingList.get(4).toString());
                ToolColorLbl.setText("Tool Color : R(" + HelpingList.get(7) + ") G(" + HelpingList.get(8) + ") B(" + HelpingList.get(9) + ")");
                if (HelpingList.get(11) == 1) {
                    FillColorLbl.setText("Fill Color : R(" + HelpingList.get(12) + ") G(" + HelpingList.get(13) + ") B(" + HelpingList.get(14) + ")");
                } else {
                    FillColorLbl.setText("Fill Color : Unfilled");
                }
                StrokeSizeSldr.setValue(HelpingList.get(10));
                
                CenterPointLbl.setVisible(false);
                CPXLbl.setVisible(false);
                CPYLbl.setVisible(false);
                CPYTxtFld.setVisible(false);
                CPXTxtFld.setVisible(false);
                MiddlePointsLbl.setVisible(false);
                MPXLbl.setVisible(false);
                MPYLbl.setVisible(false);
                MPXTxtFld.setVisible(false);
                MPYTxtFld.setVisible(false);
                MPXLbl1.setVisible(false);
                MPYLbl1.setVisible(false);
                MPXTxtFld1.setVisible(false);
                MPYTxtFld1.setVisible(false);
                MPXLbl2.setVisible(false);
                MPYLbl2.setVisible(false);
                MPXTxtFld2.setVisible(false);
                MPYTxtFld2.setVisible(false);
                SideRadiusLbl.setVisible(false);
                SideRadiusTxtFld.setVisible(false);
                break;
        }
    }
    
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        strokeSize = StrokeSizeSldr.getValue();
        switch(HelpingList.get(0)) {
            case 1:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(EPYTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(5, shapeToolColor.getRed());
                    HelpingList.set(6, shapeToolColor.getGreen());
                    HelpingList.set(7, shapeToolColor.getBlue());
                }
                HelpingList.set(8, strokeSize);
                break;
            case 2:
                HelpingList.set(1, Integer.parseInt(CPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(CPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(SideRadiusTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(4, shapeToolColor.getRed());
                    HelpingList.set(5, shapeToolColor.getGreen());
                    HelpingList.set(6, shapeToolColor.getBlue());
                }
                HelpingList.set(7, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(8) == 1) {
                        HelpingList.set(9, shapeFillColor.getRed());
                        HelpingList.set(10, shapeFillColor.getGreen());
                        HelpingList.set(11, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(8, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
            case 3:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(MPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(MPYTxtFld.getText()));
                HelpingList.set(5, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(6, Integer.parseInt(EPYTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(7, shapeToolColor.getRed());
                    HelpingList.set(8, shapeToolColor.getGreen());
                    HelpingList.set(9, shapeToolColor.getBlue());
                }
                HelpingList.set(10, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(11) == 1) {
                        HelpingList.set(12, shapeFillColor.getRed());
                        HelpingList.set(13, shapeFillColor.getGreen());
                        HelpingList.set(14, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(11, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
            case 4:
                HelpingList.set(1, Integer.parseInt(CPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(CPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(SideRadiusTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(4, shapeToolColor.getRed());
                    HelpingList.set(5, shapeToolColor.getGreen());
                    HelpingList.set(6, shapeToolColor.getBlue());
                }
                HelpingList.set(7, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(8) == 1) {
                        HelpingList.set(9, shapeFillColor.getRed());
                        HelpingList.set(10, shapeFillColor.getGreen());
                        HelpingList.set(11, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(8, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
            case 5:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(MPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(MPYTxtFld.getText()));
                HelpingList.set(5, Integer.parseInt(MPXTxtFld1.getText()));
                HelpingList.set(6, Integer.parseInt(MPYTxtFld1.getText()));
                HelpingList.set(7, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(8, Integer.parseInt(EPYTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(9, shapeToolColor.getRed());
                    HelpingList.set(10, shapeToolColor.getGreen());
                    HelpingList.set(11, shapeToolColor.getBlue());
                }
                HelpingList.set(12, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(13) == 1) {
                        HelpingList.set(14, shapeFillColor.getRed());
                        HelpingList.set(15, shapeFillColor.getGreen());
                        HelpingList.set(16, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(13, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
            case 6:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(MPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(MPYTxtFld.getText()));
                HelpingList.set(5, Integer.parseInt(MPXTxtFld1.getText()));
                HelpingList.set(6, Integer.parseInt(MPYTxtFld1.getText()));
                HelpingList.set(7, Integer.parseInt(MPXTxtFld2.getText()));
                HelpingList.set(8, Integer.parseInt(MPYTxtFld2.getText()));
                HelpingList.set(9, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(10, Integer.parseInt(EPYTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(11, shapeToolColor.getRed());
                    HelpingList.set(12, shapeToolColor.getGreen());
                    HelpingList.set(13, shapeToolColor.getBlue());
                }
                HelpingList.set(14, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(15) == 1) {
                        HelpingList.set(16, shapeFillColor.getRed());
                        HelpingList.set(17, shapeFillColor.getGreen());
                        HelpingList.set(18, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(15, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
            case 7:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(MPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(MPYTxtFld.getText()));
                HelpingList.set(5, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(6, Integer.parseInt(EPYTxtFld.getText()));
                if (changedToolColor) {
                    HelpingList.set(7, shapeToolColor.getRed());
                    HelpingList.set(8, shapeToolColor.getGreen());
                    HelpingList.set(9, shapeToolColor.getBlue());
                }
                HelpingList.set(10, strokeSize);
                break;
            case 8:
                HelpingList.set(1, Integer.parseInt(SPXTxtFld.getText()));
                HelpingList.set(2, Integer.parseInt(SPYTxtFld.getText()));
                HelpingList.set(3, Integer.parseInt(EPXTxtFld.getText()));
                HelpingList.set(4, Integer.parseInt(EPYTxtFld.getText()));
                HelpingList.set(5, Math.abs(HelpingList.get(1) - HelpingList.get(3)));
                HelpingList.set(6, Math.abs(HelpingList.get(2) - HelpingList.get(4)));
                if (changedToolColor) {
                    HelpingList.set(7, shapeToolColor.getRed());
                    HelpingList.set(8, shapeToolColor.getGreen());
                    HelpingList.set(9, shapeToolColor.getBlue());
                }
                HelpingList.set(10, strokeSize);
                if (changedFillColor) {
                    if (HelpingList.get(11) == 1) {
                        HelpingList.set(12, shapeFillColor.getRed());
                        HelpingList.set(13, shapeFillColor.getGreen());
                        HelpingList.set(14, shapeFillColor.getBlue());
                    } else {
                        HelpingList.set(11, 1);
                        HelpingList.add(shapeFillColor.getRed());
                        HelpingList.add(shapeFillColor.getGreen());
                        HelpingList.add(shapeFillColor.getBlue());
                    }
                }
                break;
        }
        String InfoMsg = "Done! \nAny changes made on the shape's elements will be saved.";
        JOptionPane.showMessageDialog(null,InfoMsg);
        this.closeDialog(null);
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void ChangeToolColorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeToolColorBtnActionPerformed
        shapeToolColor = JColorChooser.showDialog(null, "Tool Color", shapeToolColor);
        ToolColorLbl.setText("Tool Color : R(" + shapeToolColor.getRed() + ") G(" + shapeToolColor.getGreen() + ") B(" + shapeToolColor.getBlue() + ")");
        changedToolColor = true;
    }//GEN-LAST:event_ChangeToolColorBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        String QuestionMsg = "Attention! Any changes made on the shape's elements will not be saved if you cancel. \nDo you want to continue?";
        int yes_no = JOptionPane.showConfirmDialog(null, QuestionMsg, "Draw Pad's Dimensions", JOptionPane.YES_NO_OPTION);
        if (yes_no == JOptionPane.YES_OPTION) {
            this.closeDialog(null);
        }
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void ChangeFillColorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeFillColorBtnActionPerformed
        shapeFillColor = JColorChooser.showDialog(null, "Fill Color", shapeFillColor);
        FillColorLbl.setText("Fill Color : R(" + shapeFillColor.getRed() + ") G(" + shapeFillColor.getGreen() + ") B(" + shapeFillColor.getBlue() + ")");
        changedFillColor = true;
    }//GEN-LAST:event_ChangeFillColorBtnActionPerformed

    private void StrokeSizeSldrStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_StrokeSizeSldrStateChanged
        strokeSize = StrokeSizeSldr.getValue();
    }//GEN-LAST:event_StrokeSizeSldrStateChanged

    private void SPXTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SPXTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_SPXTxtFldKeyTyped

    private void SPYTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SPYTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_SPYTxtFldKeyTyped

    private void CPXTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CPXTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_CPXTxtFldKeyTyped

    private void CPYTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CPYTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_CPYTxtFldKeyTyped

    private void MPXTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPXTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPXTxtFldKeyTyped

    private void MPYTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPYTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPYTxtFldKeyTyped

    private void MPXTxtFld1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPXTxtFld1KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPXTxtFld1KeyTyped

    private void MPYTxtFld1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPYTxtFld1KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPYTxtFld1KeyTyped

    private void MPXTxtFld2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPXTxtFld2KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPXTxtFld2KeyTyped

    private void MPYTxtFld2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MPYTxtFld2KeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_MPYTxtFld2KeyTyped

    private void EPXTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EPXTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_EPXTxtFldKeyTyped

    private void EPYTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EPYTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_EPYTxtFldKeyTyped

    private void SideRadiusTxtFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SideRadiusTxtFldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_SideRadiusTxtFldKeyTyped

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditDialog dialog = new EditDialog(new java.awt.Frame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CPXLbl;
    private javax.swing.JTextField CPXTxtFld;
    private javax.swing.JLabel CPYLbl;
    private javax.swing.JTextField CPYTxtFld;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel CenterPointLbl;
    private javax.swing.JButton ChangeFillColorBtn;
    private javax.swing.JButton ChangeToolColorBtn;
    private javax.swing.JLabel EPXLbl;
    private javax.swing.JTextField EPXTxtFld;
    private javax.swing.JLabel EPYLbl;
    private javax.swing.JTextField EPYTxtFld;
    private javax.swing.JPanel EditDialogPnl;
    private javax.swing.JLabel EndingPointLbl;
    private javax.swing.JLabel FillColorLbl;
    private javax.swing.JLabel MPXLbl;
    private javax.swing.JLabel MPXLbl1;
    private javax.swing.JLabel MPXLbl2;
    private javax.swing.JTextField MPXTxtFld;
    private javax.swing.JTextField MPXTxtFld1;
    private javax.swing.JTextField MPXTxtFld2;
    private javax.swing.JLabel MPYLbl;
    private javax.swing.JLabel MPYLbl1;
    private javax.swing.JLabel MPYLbl2;
    private javax.swing.JTextField MPYTxtFld;
    private javax.swing.JTextField MPYTxtFld1;
    private javax.swing.JTextField MPYTxtFld2;
    private javax.swing.JLabel MiddlePointsLbl;
    private javax.swing.JLabel SPXLbl;
    private javax.swing.JTextField SPXTxtFld;
    private javax.swing.JLabel SPYLbl;
    private javax.swing.JTextField SPYTxtFld;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel SideRadiusLbl;
    private javax.swing.JTextField SideRadiusTxtFld;
    private javax.swing.JLabel StartingPointLbl;
    private javax.swing.JLabel StrokeLbl;
    private javax.swing.JSlider StrokeSizeSldr;
    private javax.swing.JLabel ToolColorLbl;
    // End of variables declaration//GEN-END:variables
}
